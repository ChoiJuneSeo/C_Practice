//// 포인터 변수
//// 주소를 저장하는 변수 
//// 자료형 + *변수명
//// 해당 포인터에게 전달된 주소룰 해석하는 단위
//
//int i = 100;
//int* p_i = &i;
//int* pInt = nullptr;
//
//// 주소로 접근
//*p_i = 300;
//
//float f = 3.f;
//// int* p_f = (int*)&f;
//
//// 주소의 단위 -> Byte
//
//// 포인터 변수의 크기는 8 바이트 ( 64bit운영체제 )
//
//int psize = sizeof(p_i);
//
//pInt = &i;
//
//++p_i;
//
//// pInt 눈 int* 변수이기 떄문에, 가르키는 곳을 int 로 해석한다.
//// 따라서 주소값을 1 증가하는 의미는 다음 int 위치로 접근하기 위해서 sizeof(int)단위로 증가하게 된다.
//
//// 포인터와 배열
//// 배열의 특징
//// 1. 메모리가 연속적인 구조이다.
//// 2. 배열의 이름은 배열의 시작 '주소'이다.
//
//int iArr[10] = {};
//
//// int 단위로 접근
//*(iArr + 0) = 9; // iArr[0] = 9;
//*(iArr + 1) = 10; // iArr[1] = 10;
//// ------------------------------08/11-----------------------------------------------------------
